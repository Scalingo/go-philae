// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-philae/v5/elasticsearchprobe (interfaces: CertPoolGetter)

// Package elasticsearchprobemock is a generated GoMock package.
package elasticsearchprobemock

import (
	x509 "crypto/x509"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCertPoolGetter is a mock of CertPoolGetter interface.
type MockCertPoolGetter struct {
	ctrl     *gomock.Controller
	recorder *MockCertPoolGetterMockRecorder
}

// MockCertPoolGetterMockRecorder is the mock recorder for MockCertPoolGetter.
type MockCertPoolGetterMockRecorder struct {
	mock *MockCertPoolGetter
}

// NewMockCertPoolGetter creates a new mock instance.
func NewMockCertPoolGetter(ctrl *gomock.Controller) *MockCertPoolGetter {
	mock := &MockCertPoolGetter{ctrl: ctrl}
	mock.recorder = &MockCertPoolGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCertPoolGetter) EXPECT() *MockCertPoolGetterMockRecorder {
	return m.recorder
}

// FromCustomCA mocks base method.
func (m *MockCertPoolGetter) FromCustomCA(arg0 []byte) *x509.CertPool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FromCustomCA", arg0)
	ret0, _ := ret[0].(*x509.CertPool)
	return ret0
}

// FromCustomCA indicates an expected call of FromCustomCA.
func (mr *MockCertPoolGetterMockRecorder) FromCustomCA(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FromCustomCA", reflect.TypeOf((*MockCertPoolGetter)(nil).FromCustomCA), arg0)
}

// SystemPool mocks base method.
func (m *MockCertPoolGetter) SystemPool() (*x509.CertPool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SystemPool")
	ret0, _ := ret[0].(*x509.CertPool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SystemPool indicates an expected call of SystemPool.
func (mr *MockCertPoolGetterMockRecorder) SystemPool() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SystemPool", reflect.TypeOf((*MockCertPoolGetter)(nil).SystemPool))
}
